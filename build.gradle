plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven {
		url = "https://maven.kyrptonaught.dev"
	}
	//maven {
        //url = "https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/"
    //}

	maven { url = 'https://maven.minecraftforge.net/' }

	maven {
		url = uri("https://ueaj.dev/maven")
		// for 0.4.2 and older
		// url uri("https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/")
	}
	maven {
        url 'https://raw.nuaa.cf/SolidBlock-cn/mvn-repo/main'

        // 如果上面的网址连接不成功，可以尝试使用镜像站，例如：
        // url 'https://raw.nuaa.cf/SolidBlock-cn/mvn-repo/main'
        // 注：不确保镜像站能稳定连接且内容不被篡改，上述镜像站地址亦只是示例。
    }
	maven { url "https://maven.terraformersmc.com/releases/" }
	
	maven { url = 'https://jitpack.io' }
	
	maven { url "https://maven.shedaniel.me/" }
	
	maven { url = 'https://api.modrinth.com/maven' }
	
	maven { url 'https://maven.frohnmeyer-wds.de/artifacts' }

    maven {
        url 'https://repo.opencollab.dev/maven-snapshots'
        mavenContent {
            snapshotsOnly()
        }
    }
    maven {
        url 'https://repo.opencollab.dev/maven-releases'
        mavenContent {
            releasesOnly()
        }
    }

	maven {
		url "https://maven.theepicblock.nl"
		content { includeGroup("nl.theepicblock") }
	}

	maven { url 'https://maven.nucleoid.xyz' } // You should have it

	//flatDir { dir "D:/Gradle/Fabric1.20.1/dir" }
	maven { url = "https://mvn.devos.one/snapshots/" }

	maven {
      name = 'TerraformersMC'
      url = 'https://maven.terraformersmc.com/'
    }
	
	maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

}

loom {
	runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=coreextensions"

			runDir "build/datagen"
		}
	}
	accessWidenerPath = file("src/main/resources/.accesswidener")
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	//modImplementation 'software.bernie.geckolib:geckolib-fabric-1.20:4.2'

	modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta64-1.20'
	include 'net.kyrptonaught:customportalapi:0.0.1-beta64-1.20'
	implementation 'org.yaml:snakeyaml:1.33'
	include 'org.yaml:snakeyaml:1.33'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
	include 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
	implementation 'io.netty:netty-codec-http:4.1.63.Final'
	include 'io.netty:netty-codec-http:4.1.63.Final'
	
	//implementation 'io.netty:netty-codec-http-websocket:4.1.63.Final'
	//include 'io.netty:netty-codec-http-websocket:4.1.63.Final'
	modImplementation("net.devtech:arrp:0.8.0")
	modImplementation "pers.solid:brrp-fabric:1.0.1-1.20.1"
	
	modApi "me.shedaniel.cloth:cloth-config-fabric:11.1.106"
	
	//include "midnightlib:1.4.1-fabric"
    //include files('dir/OpenLoader-CEFabric-1.20.1-19.0.2.jar')
	//modImplementation files('dir/midnightlib-fabric-1.2.1-sources.jar')
	implementation 'com.google.code.gson:gson:2.8.8'

	//compileOnly 'org.geysermc.geyser:api:2.1.1-SNAPSHOT'

	implementation files('dir/PolyMc-5.4.0+1.20-sources.jar')
	modImplementation files('dir/PolyMc-5.4.0+1.20.jar')
	implementation files('dir/resource-locator-api-0.5.0+1.20.1-sources.jar')
	modImplementation files('dir/resource-locator-api-0.5.0+1.20.1.jar')

	modImplementation ("eu.pb4:polymer-core:0.5.15+1.20.1")

	//implementation ("com.github.DM-Earth:Tags-Binder:${project.tags_binder_version}")
	//include("com.github.DM-Earth:Tags-Binder:${project.tags_binder_version}")

	//modImplementation(include("com.tterrag.registrate_fabric:Registrate:${project.registrate_version}"))

	//modImplementation(include("io.github.fabricators_of_create.Porting-Lib:<module>:<version>"))
	
	modImplementation files('dir/AnvilAPI-1.20.1-fabric-4.1.4.0.jar')
	include files('dir/AnvilAPI-1.20.1-fabric-4.1.4.0.jar')
	
	modApi "maven.modrinth:codelib:${project.codelib_version}"
    include "maven.modrinth:codelib:${project.codelib_version}"
	
	modImplementation "com.terraformersmc.terraform-api:terraform-wood-api-v1:7.0.1"
	modImplementation "com.terraformersmc.terraform-api:terraform-shapes-api-v1:7.0.1"
	modImplementation "com.terraformersmc.terraform-api:terraform-tree-api-v1:7.0.1"
	modImplementation "com.terraformersmc.terraform-api:terraform-surfaces-api-v1:7.0.1"
	modImplementation "com.terraformersmc.terraform-api:terraform-biome-remapper-api-v1:7.0.1"
	include "com.terraformersmc.terraform-api:terraform-wood-api-v1:7.0.1"
	include "com.terraformersmc.terraform-api:terraform-shapes-api-v1:7.0.1"
	include "com.terraformersmc.terraform-api:terraform-tree-api-v1:7.0.1"
	include "com.terraformersmc.terraform-api:terraform-surfaces-api-v1:7.0.1"
	include "com.terraformersmc.terraform-api:terraform-biome-remapper-api-v1:7.0.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	options.encoding = 'UTF-8'
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
    manifest {
        attributes 'Charset': 'UTF-8' // 设置编码为 UTF-8
    }
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}